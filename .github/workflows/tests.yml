name: Tests Athena Bank Fintech

on: 
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest

    services: 
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      PORT: 6007
      VITE_API_URL: http://localhost:6007/api

    steps:
      - name: Checkout current repo which includes workflow
        uses: actions/checkout@v3

      - name: Clone Athena Bank Fintech repo
        run: git clone https://github.com/Atenea-Conocimientos/redux-athena-bank.git app

      - name: Create file .env for the backend
        run: |
          echo "MONGO_URI=${{ env.MONGO_URI }}" > app/backend/.env
          echo "JWT_SECRET=${{ env.JWT_SECRET }}" >> app/backend/.env
          echo "PORT=${{ env.PORT }}" >> app/backend/.env
          echo "VITE_API_URL=${{ env.VITE_API_URL }}" >> app/backend/.env

      - name: Install backend dependencies
        run: |
          cd app/backend
          npm install

      - name: Run the backend 
        run: |
          cd app/backend
          npm run dev > backend.log 2>&1 &

      - name: Install wait-on
        run: npm install -g wait-on

      - name: Wait for backend
        run: wait-on tcp:6007

      - name: Install frontend dependencies
        run: |
          cd app/frontend
          npm install
        env:
          VITE_API_URL: ${{ env.VITE_API_URL }}

      - name: Run the frontend
        run: |
          cd app/frontend
          npm run dev > frontend.log 2>&1 &

      - name: Wait for frontend
        run: wait-on http://localhost:3000

      - name: Install and run tests
        env:
          BASE_URL: http://localhost:3000
        run: |
          npm install
          npx playwright install --with-deps

          mkdir -p playwright
          if [ ! -f playwright/.senderMoneyUser.json ]; then
            echo '{"cookies":[],"origins":[]}' > playwright/.senderMoneyUser.json
          fi
          if [ ! -f playwright/.receiverMoneyUser.json ]; then
            echo '{"cookies":[],"origins":[]}' > playwright/.receiverMoneyUser.json
          fi

          echo "Running tests with BASE_URL: $BASE_URL"
          npx playwright test --reporter=html

      - name: Save reports as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with: 
          name: playwright-report
          path: ./playwright-report

      - name: Deploy reports to github pages
        if: always()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Clone branch gh-pages
        run: |
          cd $RUNNER_TEMP
          git clone --depth=1 --branch=gh-pages https://x-access-token:${{secrets.GH_PAGES_PATH}} gh-pages

          cd gh-pages
          rm -rf ./*
          mkdir report-${GITHUB_RUN_NUMBER}
          cp -r $GITHUB_WORKSPACE/playwright-report/* ./report-${GITHUB_RUN_NUMBER}
          git add .
          git commit -m "Playwright report - Build $GITHUB_RUN_NUMBER"
          git push origin gh-pages

      - name: Print link in console
        run: |
          echo "Report available in: https://${{github.repository_owner}}.github.io/${{github.event.repository.name}}"
